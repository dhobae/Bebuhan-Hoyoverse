// old
// const App = () => {
//   const [isPlaying, setIsPlaying] = useState(false);
//   const [sound, setSound] = useState(null);

//   const playMusic = async () => {
//     if (!sound) {
//       const sound = new Howl({
//         src: [musicFile],
//         html5: true,
//         autoplay: true,
//         loop: true,
//         onend: () => {
//           console.log("Music ended!");
//           setIsPlaying(false);
//         },
//       });
//       try {
//         await newSound.play();
//         setSound(newSound);
//         setIsPlaying(true);
//       } catch (error) {
//         console.error("Error playing music:", error);
//       }
//     } else {
//       sound.play();
//       setIsPlaying(true);
//     }
//   };

//   const pauseMusic = () => {
//     if (sound) {
//       sound.pause();
//       setIsPlaying(false); // Mengubah state isPlaying menjadi false saat musik di-pause
//     }
//   };

//   const MySwal = withReactContent(Swal);
//   useEffect(() => {
//     const timeoutId = setTimeout(() => {
//       if (location.pathname === "/") {
//         MySwal.fire({
//           title: "Do you want to play the music?",
//           showCancelButton: true,
//           confirmButtonText: <IoIosMusicalNotes className="h-5 w-5" />,
//           cancelButtonText: <TbMusicOff className="h-5 w-5" />,
//           allowOutsideClick: false,
//         }).then((result) => {
//           if (result.isConfirmed) {
//             playMusic();
//           } else if (result.isDismissed) {
//             pauseMusic();
//           }
//         });
//       }
//     }, 0);
//     return () => clearTimeout(timeoutId);
//   }, []);
//   console.log(isPlaying);
//   return (
//     <Router>
//       <Navbar
//         isPlaying={isPlaying}
//         playMusic={playMusic}
//         pauseMusic={pauseMusic}
//         sound={sound}
//       />
//       <AppRoutes />
//     </Router>
//   );
// };

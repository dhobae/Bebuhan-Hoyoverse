{
  /* <header className="sticky top-0 w-full z-50">
        {location.pathname === "/" ? (
          // Bagian yang dirender jika location.pathname sama dengan '/'
          <nav id="home-nav" className="block">
            <div id="wraps">
              <div className="absolute z-[250] right-0">
                <div className="w-auto h-auto bg-white rounded-tl-lg rounded-bl-lg bg-opacity-75">
                  <div className="flex items-center">
                    <button onClick={toggleMenu2} className="p-4">
                      {isOpen2 ? (
                        <FaTimes className="h-6 w-6 text-gray-700" />
                      ) : (
                        <FaBars className="h-6 w-6 text-gray-700" />
                      )}
                    </button>
                  </div>
                </div>
              </div>
              <div
                className={`absolute right-3 z-[250] top-[4.5rem] w-1/2 md:w-1/3 lg:w-1/6 bg-white bg-opacity-75 rounded-lg shadow-lg transition-opacity duration-300 ${
                  isOpen2
                    ? "opacity-100 pointer-events-auto"
                    : "opacity-0 pointer-events-none"
                }`}
              >
                <div className="flex flex-col space-y-5 p-5">
                  {links.map((link, index) => (
                    <Link
                      key={index}
                      to={link.to}
                      className={`flex items-center space-x-3 px-3 py-3 rounded-md transition-all duration-300 ${
                        location.pathname === link.to
                          ? "bg-orange-400"
                          : "hover:bg-orange-400"
                      }`}
                    >
                      {link.icon}
                      <span className="text-gray-700">{link.label}</span>
                    </Link>
                  ))}
                </div>
              </div>
            </div>
          </nav>
        ) : (
          <nav className="bg-white shadow-lg" ref={nav}>
            <div className="max-w-7xl mx-auto px-4">
              <div className="flex justify-between items-center py-4">
                <div className="text-lg font-bold">Bebuhan Hoyoverse</div>
                <div className="hidden lg:flex space-x-4">
                  {links.map((link, index) => (
                    <Link
                      key={index}
                      to={link.to}
                      className={`flex items-center space-x-3 px-3 py-3 rounded-md transition-all duration-300 ${
                        location.pathname === link.to
                          ? "bg-orange-400"
                          : "hover:bg-orange-400"
                      }`}
                    >
                      {link.icon}
                      <span className="text-gray-700">{link.label}</span>
                    </Link>
                  ))}
                </div>
                <button>TOMBOL</button>
                <div className="lg:hidden flex items-center">
                  <button onClick={toggleMenu} ref={navBtn}>
                    {isOpen ? (
                      <FaTimes className="h-6 w-6 text-gray-700" />
                    ) : (
                      <FaBars className="h-6 w-6 text-gray-700" />
                    )}
                  </button>
                </div>
              </div>
            </div>
            {isOpen && (
              <div className="lg:hidden absolute right-3 top-[4.5rem] w-1/2 md:w-1/3 lg:w-1/3 bg-white rounded-lg">
                <div className="flex flex-col space-y-5 p-5">
                  {links.map((link, index) => (
                    <Link
                      key={index}
                      to={link.to}
                      className={`flex items-center space-x-3 px-3 py-3 rounded-md transition-all duration-300 ${
                        location.pathname === link.to
                          ? "bg-orange-400"
                          : "hover:bg-orange-400"
                      }`}
                    >
                      {link.icon}
                      <span className="text-gray-700">{link.label}</span>
                    </Link>
                  ))}
                </div>
              </div>
            )}
          </nav>
        )}
      </header> */
}

// const [isOpen2, setIsOpen2] = useState(false);
// const toggleMenu2 = () => {
//   setIsOpen2(!isOpen2);
// };

// import { Menu } from "@headlessui/react";